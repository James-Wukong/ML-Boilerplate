version: '3.8'
services:
  # db:
  #   image: postgres:14.1-alpine
  #   restart: always
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres
  #   ports:
  #     - '5432:5432'
  #   volumes: 
  #     - db:/var/lib/postgresql/data
  #     - ./db/init.sql:/docker-entrypoint-initdb.d/create_tables.sql
  redis:
    image: redis:7.2-rc1-alpine
    restart: always
    ports:
      - '6379:6379'
    # command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - redis:/usr/src/app/data
  # api:
  #   container_name: app-api
  #   build: 
  #     context: ./
  #     # target: dev
  #   # image: quotes-api
  #   depends_on:
  #     # - db
  #     - redis
  #   ports:
  #     - 3000:3000
  #   environment:
  #     # NODE_ENV: dev
  #     # DB_HOST: db
  #     # DB_PORT: 5432
  #     # DB_USER: postgres
  #     # DB_PASSWORD: postgres
  #     # DB_NAME: postgres
  #     REDIS_HOST: redis
  #     REDIS_PORT: 6379
  #     REDIS_PASSWORD: eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
  #   links:
  #     # - db
  #     - redis
  #   volumes:
  #     - ./:/usr/src/app
  ml_boilerplate:
    container_name: ml_boilerplate
    build: 
      context: .
      dockerfile: ./docker/ml_boilerplate.Dockerfile
    depends_on:
      - redis
    ports:
      - 8000:8000
    tty: true
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      # REDIS_PASSWORD: eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    links:
      - redis
    volumes:
      - ./ml_boilerplate:/usr/src/app/ml_boilerplate
  ml_skeleton:
    container_name: ml_skeleton
    build: 
      context: .
      dockerfile: ./docker/ml_skeleton.Dockerfile
    depends_on:
      - redis
    ports:
      - 8001:8001
    tty: true
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      # REDIS_PASSWORD: eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    links:
      - redis
    volumes:
      - ./ml_skeleton:/usr/src/app/ml_skeleton
volumes:
  # db:
  #   driver: local
  redis:
    driver: local